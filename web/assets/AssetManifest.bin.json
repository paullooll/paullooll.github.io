"DR0HJGFzc2V0cy9mb250cy9JbmRpZUZsb3dlci1SZWd1bGFyLnR0ZgwBDQEHBWFzc2V0ByRhc3NldHMvZm9udHMvSW5kaWVGbG93ZXItUmVndWxhci50dGYHLWFzc2V0cy9pbWFnZXMvQWNhZGVteXMgR2VuaXVzIFN3b3JkbWFzdGVyLmpwZwwBDQEHBWFzc2V0By1hc3NldHMvaW1hZ2VzL0FjYWRlbXlzIEdlbml1cyBTd29yZG1hc3Rlci5qcGcHL2Fzc2V0cy9pbWFnZXMvQWNhZGVteXMgVW5kZXJjb3ZlciBQcm9mZXNzb3IuanBnDAENAQcFYXNzZXQHL2Fzc2V0cy9pbWFnZXMvQWNhZGVteXMgVW5kZXJjb3ZlciBQcm9mZXNzb3IuanBnBy5hc3NldHMvaW1hZ2VzL0RldmlsIFJldHVybnMgVG8gU2Nob29sIERheXMuanBnDAENAQcFYXNzZXQHLmFzc2V0cy9pbWFnZXMvRGV2aWwgUmV0dXJucyBUbyBTY2hvb2wgRGF5cy5qcGcHIGFzc2V0cy9pbWFnZXMvRHVrZSBQZW5kcmFnb24uanBnDAENAQcFYXNzZXQHIGFzc2V0cy9pbWFnZXMvRHVrZSBQZW5kcmFnb24uanBnBy5hc3NldHMvaW1hZ2VzL0dlbml1cyBvZiB0aGUgVW5pcXVlIExpbmVhZ2UuanBnDAENAQcFYXNzZXQHLmFzc2V0cy9pbWFnZXMvR2VuaXVzIG9mIHRoZSBVbmlxdWUgTGluZWFnZS5qcGcHLGFzc2V0cy9pbWFnZXMvSGVsbXV0XyBUaGUgRm9yc2FrZW4gQ2hpbGQuanBnDAENAQcFYXNzZXQHLGFzc2V0cy9pbWFnZXMvSGVsbXV0XyBUaGUgRm9yc2FrZW4gQ2hpbGQuanBnByJhc3NldHMvaW1hZ2VzL0hvYXJkaW5nIGluIEhlbGwuanBnDAENAQcFYXNzZXQHImFzc2V0cy9pbWFnZXMvSG9hcmRpbmcgaW4gSGVsbC5qcGcHLGFzc2V0cy9pbWFnZXMvSSBLaWxsZWQgYW4gQWNhZGVteSBQbGF5ZXIuanBnDAENAQcFYXNzZXQHLGFzc2V0cy9pbWFnZXMvSSBLaWxsZWQgYW4gQWNhZGVteSBQbGF5ZXIuanBnBx9hc3NldHMvaW1hZ2VzL0tpbGxlciBQaWV0cm8uanBnDAENAQcFYXNzZXQHH2Fzc2V0cy9pbWFnZXMvS2lsbGVyIFBpZXRyby5qcGcHLmFzc2V0cy9pbWFnZXMvT21uaXNjaWVudCBSZWFkZXJzIFZpZXdwb2ludC5qcGcMAQ0BBwVhc3NldAcuYXNzZXRzL2ltYWdlcy9PbW5pc2NpZW50IFJlYWRlcnMgVmlld3BvaW50LmpwZwcsYXNzZXRzL2ltYWdlcy9QaWNrIE1lIFVwLCBJbmZpbml0ZSBHYWNoYS5qcGcMAQ0BBwVhc3NldAcsYXNzZXRzL2ltYWdlcy9QaWNrIE1lIFVwLCBJbmZpbml0ZSBHYWNoYS5qcGcHM2Fzc2V0cy9pbWFnZXMvUmVmb3JtYXRpb24gb2YgdGhlIERlYWRiZWF0IE5vYmxlLmpwZwwBDQEHBWFzc2V0BzNhc3NldHMvaW1hZ2VzL1JlZm9ybWF0aW9uIG9mIHRoZSBEZWFkYmVhdCBOb2JsZS5qcGcHMWFzc2V0cy9pbWFnZXMvUmVncmVzc2luZyB3aXRoIHRoZSBLaW5ncyBQb3dlci5qcGcMAQ0BBwVhc3NldAcxYXNzZXRzL2ltYWdlcy9SZWdyZXNzaW5nIHdpdGggdGhlIEtpbmdzIFBvd2VyLmpwZwcfYXNzZXRzL2ltYWdlcy9SZWxpZmUgUGxheWVyLmpwZwwBDQEHBWFzc2V0Bx9hc3NldHMvaW1hZ2VzL1JlbGlmZSBQbGF5ZXIuanBnBzJhc3NldHMvaW1hZ2VzL1JldHVybiBvZiB0aGUgOHRoIENsYXNzIE1hZ2ljaWFuLmpwZwwBDQEHBWFzc2V0BzJhc3NldHMvaW1hZ2VzL1JldHVybiBvZiB0aGUgOHRoIENsYXNzIE1hZ2ljaWFuLmpwZwczYXNzZXRzL2ltYWdlcy9SZXR1cm4gb2YgdGhlIEJsb29kdGhpcnN0eSBQb2xpY2UuanBnDAENAQcFYXNzZXQHM2Fzc2V0cy9pbWFnZXMvUmV0dXJuIG9mIHRoZSBCbG9vZHRoaXJzdHkgUG9saWNlLmpwZwceYXNzZXRzL2ltYWdlcy9TZWNyZXQgQ2xhc3MuanBnDAENAQcFYXNzZXQHHmFzc2V0cy9pbWFnZXMvU2VjcmV0IENsYXNzLmpwZwcfYXNzZXRzL2ltYWdlcy9Tb2xvIExldmVsaW5nLmpwZwwBDQEHBWFzc2V0Bx9hc3NldHMvaW1hZ2VzL1NvbG8gTGV2ZWxpbmcuanBnBydhc3NldHMvaW1hZ2VzL1NvbG8gTWF4LUxldmVsIE5ld2JpZS5qcGcMAQ0BBwVhc3NldAcnYXNzZXRzL2ltYWdlcy9Tb2xvIE1heC1MZXZlbCBOZXdiaWUuanBnByxhc3NldHMvaW1hZ2VzL1N0YXItRW1icmFjaW5nIFN3b3JkbWFzdGVyLmpwZwwBDQEHBWFzc2V0Byxhc3NldHMvaW1hZ2VzL1N0YXItRW1icmFjaW5nIFN3b3JkbWFzdGVyLmpwZwceYXNzZXRzL2ltYWdlcy9TdW1tZXIgVGFzdGUuanBnDAENAQcFYXNzZXQHHmFzc2V0cy9pbWFnZXMvU3VtbWVyIFRhc3RlLmpwZwctYXNzZXRzL2ltYWdlcy9UaGUgQmVnaW5uaW5nIEFmdGVyIFRoZSBFbmQuanBnDAENAQcFYXNzZXQHLWFzc2V0cy9pbWFnZXMvVGhlIEJlZ2lubmluZyBBZnRlciBUaGUgRW5kLmpwZwc2YXNzZXRzL2ltYWdlcy9UaGUgR2VuaXVzIEFzc2Fzc2luIFdobyBUYWtlcyBpdCBBbGwuanBnDAENAQcFYXNzZXQHNmFzc2V0cy9pbWFnZXMvVGhlIEdlbml1cyBBc3Nhc3NpbiBXaG8gVGFrZXMgaXQgQWxsLmpwZwciYXNzZXRzL2ltYWdlcy9UaGUgSGVybyBSZXR1cm5zLmpwZwwBDQEHBWFzc2V0ByJhc3NldHMvaW1hZ2VzL1RoZSBIZXJvIFJldHVybnMuanBnBzlhc3NldHMvaW1hZ2VzL1RoZSBLbmlnaHQgS2luZyBXaG8gUmV0dXJuZWQgd2l0aCBhIEdvZC5qcGcMAQ0BBwVhc3NldAc5YXNzZXRzL2ltYWdlcy9UaGUgS25pZ2h0IEtpbmcgV2hvIFJldHVybmVkIHdpdGggYSBHb2QuanBnBxphc3NldHMvaW1hZ2VzL1RoZSBMaXZlLmpwZwwBDQEHBWFzc2V0Bxphc3NldHMvaW1hZ2VzL1RoZSBMaXZlLmpwZwc4YXNzZXRzL2ltYWdlcy9UaGUgTWF4LUxldmVsIFBsYXllcnMgMTAwdGggUmVncmVzc2lvbi5qcGcMAQ0BBwVhc3NldAc4YXNzZXRzL2ltYWdlcy9UaGUgTWF4LUxldmVsIFBsYXllcnMgMTAwdGggUmVncmVzc2lvbi5qcGcHE2Fzc2V0cy9pbWFnZXMvYi5wbmcMAQ0BBwVhc3NldAcTYXNzZXRzL2ltYWdlcy9iLnBuZw=="